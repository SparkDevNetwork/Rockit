<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TimeZoneConverter</name>
    </assembly>
    <members>
        <member name="T:TimeZoneConverter.TZConvert">
            <summary>
            Converts time zone identifiers from various sources.
            </summary>
        </member>
        <member name="P:TimeZoneConverter.TZConvert.KnownIanaTimeZoneNames">
            <summary>
            Gets a collection of all IANA time zone names known to this library.
            </summary>
        </member>
        <member name="P:TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds">
            <summary>
            Gets a collection of all Windows time zone IDs known to this library.
            </summary>
        </member>
        <member name="P:TimeZoneConverter.TZConvert.KnownRailsTimeZoneNames">
            <summary>
            Gets a collection of all Rails time zone names known to this library.
            </summary>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.IanaToWindows(System.String)">
            <summary>
            Converts an IANA time zone name to the equivalent Windows time zone ID.
            </summary>
            <param name="ianaTimeZoneName">The IANA time zone name to convert.</param>
            <returns>A Windows time zone ID.</returns>
            <exception cref="T:System.InvalidTimeZoneException">Thrown if the input string was not recognized or has no equivalent Windows zone.</exception>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.TryIanaToWindows(System.String,System.String@)">
            <summary>
            Attempts to convert an IANA time zone name to the equivalent Windows time zone ID.
            </summary>
            <param name="ianaTimeZoneName">The IANA time zone name to convert.</param>
            <param name="windowsTimeZoneId">A Windows time zone ID.</param>
            <returns><c>true</c> if successful, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.WindowsToIana(System.String,System.String)">
            <summary>
            Converts a Windows time zone ID to an equivalent IANA time zone name.
            </summary>
            <param name="windowsTimeZoneId">The Windows time zone ID to convert.</param>
            <param name="territoryCode">
            An optional two-letter ISO Country/Region code, used to get a a specific mapping.
            Defaults to "001" if not specified, which means to get the "golden zone" - the one that is most prevalent.
            </param>
            <returns>An IANA time zone name.</returns>
            <exception cref="T:System.InvalidTimeZoneException">Thrown if the input string was not recognized or has no equivalent IANA zone.</exception>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.TryWindowsToIana(System.String,System.String@)">
            <summary>
            Attempts to convert a Windows time zone ID to an equivalent IANA time zone name.
            Uses the "golden zone" - the one that is the most prevalent.
            </summary>
            <param name="windowsTimeZoneId">The Windows time zone ID to convert.</param>
            <param name="ianaTimeZoneName">An IANA time zone name.</param>
            <returns><c>true</c> if successful, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.TryWindowsToIana(System.String,System.String,System.String@)">
            <summary>
            Attempts to convert a Windows time zone ID to an equivalent IANA time zone name.
            </summary>
            <param name="windowsTimeZoneId">The Windows time zone ID to convert.</param>
            <param name="territoryCode">
            An optional two-letter ISO Country/Region code, used to get a a specific mapping.
            Defaults to "001" if not specified, which means to get the "golden zone" - the one that is most prevalent.
            </param>
            <param name="ianaTimeZoneName">An IANA time zone name.</param>
            <returns><c>true</c> if successful, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.GetTimeZoneInfo(System.String)">
            <summary>
            Retrieves a <see cref="T:System.TimeZoneInfo"/> object given a valid Windows or IANA time zone identifier,
            regardless of which platform the application is running on.
            </summary>
            <param name="windowsOrIanaTimeZoneId">A valid Windows or IANA time zone identifier.</param>
            <returns>A <see cref="T:System.TimeZoneInfo"/> object.</returns>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.TryGetTimeZoneInfo(System.String,System.TimeZoneInfo@)">
            <summary>
            Attempts to retrieve a <see cref="T:System.TimeZoneInfo"/> object given a valid Windows or IANA time zone identifier,
            regardless of which platform the application is running on.
            </summary>
            <param name="windowsOrIanaTimeZoneId">A valid Windows or IANA time zone identifier.</param>
            <param name="timeZoneInfo">A <see cref="T:System.TimeZoneInfo"/> object.</param>
            <returns><c>true</c> if successful, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.IanaToRails(System.String)">
            <summary>
            Converts an IANA time zone name to one or more equivalent Rails time zone names.
            </summary>
            <param name="ianaTimeZoneName">The IANA time zone name to convert.</param>
            <returns>One or more equivalent Rails time zone names.</returns>
            <exception cref="T:System.InvalidTimeZoneException">Thrown if the input string was not recognized or has no equivalent Rails zone.</exception>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.TryIanaToRails(System.String,System.Collections.Generic.IList{System.String}@)">
            <summary>
            Attempts to convert an IANA time zone name to one or more equivalent Rails time zone names.
            </summary>
            <param name="ianaTimeZoneName">The IANA time zone name to convert.</param>
            <param name="railsTimeZoneNames">One or more equivalent Rails time zone names.</param>
            <returns><c>true</c> if successful, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.RailsToIana(System.String)">
            <summary>
            Converts a Rails time zone name to an equivalent IANA time zone name.
            </summary>
            <param name="railsTimeZoneName">The Rails time zone name to convert.</param>
            <returns>An IANA time zone name.</returns>
            <exception cref="T:System.InvalidTimeZoneException">Thrown if the input string was not recognized or has no equivalent IANA zone.</exception>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.TryRailsToIana(System.String,System.String@)">
            <summary>
            Attempts to convert a Rails time zone name to an equivalent IANA time zone name.
            </summary>
            <param name="railsTimeZoneName">The Rails time zone name to convert.</param>
            <param name="ianaTimeZoneName">An IANA time zone name.</param>
            <returns><c>true</c> if successful, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.RailsToWindows(System.String)">
            <summary>
            Converts a Rails time zone name to an equivalent Windows time zone ID.
            </summary>
            <param name="railsTimeZoneName">The Rails time zone name to convert.</param>
            <returns>A Windows time zone ID.</returns>
            <exception cref="T:System.InvalidTimeZoneException">Thrown if the input string was not recognized or has no equivalent Windows zone.</exception>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.TryRailsToWindows(System.String,System.String@)">
            <summary>
            Attempts to convert a Rails time zone name to an equivalent Windows time zone ID.
            </summary>
            <param name="railsTimeZoneName">The Rails time zone name to convert.</param>
            <param name="windowsTimeZoneId">A Windows time zone ID.</param>
            <returns><c>true</c> if successful, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.WindowsToRails(System.String,System.String)">
            <summary>
            Converts a Windows time zone ID to one ore more equivalent Rails time zone names.
            </summary>
            <param name="windowsTimeZoneId">The Windows time zone ID to convert.</param>
            <param name="territoryCode">
            An optional two-letter ISO Country/Region code, used to get a a specific mapping.
            Defaults to "001" if not specified, which means to get the "golden zone" - the one that is most prevalent.
            </param>
            <returns>One or more equivalent Rails time zone names.</returns>
            <exception cref="T:System.InvalidTimeZoneException">Thrown if the input string was not recognized or has no equivalent Rails zone.</exception>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.TryWindowsToRails(System.String,System.Collections.Generic.IList{System.String}@)">
            <summary>
            Attempts to convert a Windows time zone ID to one ore more equivalent Rails time zone names.
            Uses the "golden zone" - the one that is the most prevalent.
            </summary>
            <param name="windowsTimeZoneId">The Windows time zone ID to convert.</param>
            <param name="railsTimeZoneNames">One or more equivalent Rails time zone names.</param>
            <returns><c>true</c> if successful, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:TimeZoneConverter.TZConvert.TryWindowsToRails(System.String,System.String,System.Collections.Generic.IList{System.String}@)">
            <summary>
            Attempts to convert a Windows time zone ID to one ore more equivalent Rails time zone names.
            </summary>
            <param name="windowsTimeZoneId">The Windows time zone ID to convert.</param>
            <param name="territoryCode">
            An optional two-letter ISO Country/Region code, used to get a a specific mapping.
            Defaults to "001" if not specified, which means to get the "golden zone" - the one that is most prevalent.
            </param>
            <param name="railsTimeZoneNames">One or more equivalent Rails time zone names.</param>
            <returns><c>true</c> if successful, <c>false</c> otherwise.</returns>
        </member>
    </members>
</doc>
